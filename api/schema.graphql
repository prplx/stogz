### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type IEXSearchResult {
  exchange: String
  region: String
  securityName: String
  symbol: String
}

scalar Json

type Mutation {
  addShareToWatchlist(symbol: String!, watchlistId: ID!): WatchlistShares!
  createWatchlist(name: String!): Watchlist!
  removeShareFromWatchList(shareId: Int!, watchlistId: Int!): WatchlistShares!
  updateWatchlistHiddenColumns(columns: [String]!, watchlistId: Int!): Watchlist!
}

type Portfolio {
  createdAt: DateTime!
  id: Int!
  name: String!
  shares(after: PortfolioSharesWhereUniqueInput, before: PortfolioSharesWhereUniqueInput, first: Int, last: Int): [PortfolioShares!]!
  user: User!
}

type PortfolioShares {
  createdAt: DateTime!
}

input PortfolioSharesShareIdPortfolioIdCompoundUniqueInput {
  portfolioId: Int!
  shareId: Int!
}

input PortfolioSharesWhereUniqueInput {
  shareId_portfolioId: PortfolioSharesShareIdPortfolioIdCompoundUniqueInput
}

type Query {
  symbolSearch(
    """fragment"""
    fragment: String!
  ): [IEXSearchResult]
  watchlist(
    """id of the watchlist"""
    id: ID!
  ): Watchlist
  watchlists: [Watchlist]
}

type Share {
  companyName: String!
  country: String
  description: String!
  exchange: String!
  id: Int!
  industry: String!
  issueType: String!
  sector: String!
  symbol: String!
}

type ShareQuote {
  addedAt: DateTime
  addedPrice: Float
  change: Float
  changePercent: Float
  changePercentSinceAdded: Float
  changeSinceAdded: Float
  companyName: String
  high: Float
  latestPrice: Float
  latestUpdate: Float
  latestVolume: Float
  low: Float
  open: Float
  shareId: Int
  symbol: String
}

type User {
  email: String
  familyName: String
  givenName: String
  id: Int!
  picture: String
  sub: String!
  watchlists(after: WatchlistWhereUniqueInput, before: WatchlistWhereUniqueInput, first: Int, last: Int): [Watchlist!]!
}

type Watchlist {
  hiddenColumns: Json
  id: Int!
  name: String!
  shares: [ShareQuote]
  user: User!
}

type WatchlistShares {
  price: Float!
}

input WatchlistWhereUniqueInput {
  id: Int
}
